@page "/Register"
@using Domain.DTOs
@using IAuthService = BlazorWASM.Services.ClientInterfaces.IAuthService
@inject ISnackbar Snackbar
@inject IAuthService AuthService
@inject NavigationManager NavManager

<MudText Typo="Typo.h5" Align="Align.Center">Create an account</MudText>

<PageTitle>Create new account on NOT Reddit</PageTitle>
<MudContainer MaxWidth="MaxWidth.Small">
    <MudPaper Class="pa-7">
        <MudTextField @bind-Value="_username" InputType="InputType.Text" Label="Username"></MudTextField>
        <MudTextField @bind-Value="_email" InputType="InputType.Email" Label="Email"></MudTextField>
        <MudTextField @bind-Value="_password" InputType="InputType.Password" Label="Password"></MudTextField>
        <MudTextField @bind-Value="_retyped" InputType="InputType.Password" Label="Retype password"></MudTextField>
        <MudButton Variant="Variant.Filled" OnClick="RegisterAsync" Color="Color.Success">Register</MudButton>
        <MudButton Variant="Variant.Filled" OnClick="@(() => NavManager.NavigateTo("/"))" Color="Color.Error">Go Back</MudButton>
    </MudPaper>
</MudContainer>


@code {
    private string _email = "";
    private string _password = "";
    private string _retyped = "";
    private string _username = "";

    private async Task RegisterAsync()
    {
        if (_password != _retyped)
        {
            Snackbar.Add("Retyped password does not match.", Severity.Error);
            return;
        }

        try
        {
            await AuthService.RegisterAsync(new UserCreationDto
            {
                Username = _username,
                Email = _email,
                Password = _password
            });

            await AuthService.LoginAsync(_username, _password);

            NavManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            Snackbar.Add(e.Message, Severity.Error);
        }
    }

}